// <auto-generated />
using System;
using DORA.Navigation.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Navigation.Migrations
{
    [DbContext(typeof(NavigationContext))]
    [Migration("20210618122253_NavInitial")]
    partial class NavInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DORA.Access.Context.Entities.Role", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<string>("KeyCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key_code");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("label");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavGroup", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("DefaultNavItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("default_nav_item_id");

                    b.Property<int>("GroupType")
                        .HasColumnType("int")
                        .HasColumnName("group_type");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("label");

                    b.HasKey("Id");

                    b.HasIndex("DefaultNavItemId");

                    b.ToTable("navigation_group");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("label");

                    b.Property<Guid>("NavGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("nav_group_id");

                    b.Property<Guid?>("ParentNavItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("parent_nav_item_id");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<string>("UrlTarget")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("target");

                    b.Property<string>("onClickJsHandler")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("on_click");

                    b.HasKey("Id");

                    b.HasIndex("NavGroupId");

                    b.HasIndex("ParentNavItemId");

                    b.ToTable("navigation_item");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.RoleNavGroup", b =>
                {
                    b.Property<Guid>("NavGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("nav_group_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.HasKey("NavGroupId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("role_navigation_group");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.RoleNavItem", b =>
                {
                    b.Property<Guid>("NavItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("nav_item_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.HasKey("NavItemId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("role_navigation_item");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavGroup", b =>
                {
                    b.HasOne("DORA.Navigation.Context.Entities.NavItem", "DefaultNavItem")
                        .WithMany()
                        .HasForeignKey("DefaultNavItemId");

                    b.Navigation("DefaultNavItem");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavItem", b =>
                {
                    b.HasOne("DORA.Navigation.Context.Entities.NavGroup", "NavGroup")
                        .WithMany("NavItems")
                        .HasForeignKey("NavGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DORA.Navigation.Context.Entities.NavItem", "ParentNavItem")
                        .WithMany("ChildNavItems")
                        .HasForeignKey("ParentNavItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("NavGroup");

                    b.Navigation("ParentNavItem");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.RoleNavGroup", b =>
                {
                    b.HasOne("DORA.Navigation.Context.Entities.NavGroup", "NavGroup")
                        .WithMany()
                        .HasForeignKey("NavGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DORA.Access.Context.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NavGroup");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.RoleNavItem", b =>
                {
                    b.HasOne("DORA.Navigation.Context.Entities.NavItem", "NavItem")
                        .WithMany()
                        .HasForeignKey("NavItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DORA.Access.Context.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NavItem");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavGroup", b =>
                {
                    b.Navigation("NavItems");
                });

            modelBuilder.Entity("DORA.Navigation.Context.Entities.NavItem", b =>
                {
                    b.Navigation("ChildNavItems");
                });
#pragma warning restore 612, 618
        }
    }
}
