// <auto-generated />
using System;
using DORA.DotAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotAPI.Migrations
{
    [DbContext(typeof(AccessContext))]
    partial class AccessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.JwtRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2")
                        .HasColumnName("valid");

                    b.HasKey("Id");

                    b.ToTable("refresh_token");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.Resource", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<string>("KeyCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key_code");

                    b.HasKey("Id");

                    b.ToTable("access_resources");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.ResourceAccess", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<string>("KeyCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key_code");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("resource_id");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("access_resource_access");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.Role", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("label");

                    b.Property<string>("NameCanonical")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name_canonical");

                    b.HasKey("Id");

                    b.ToTable("access_roles");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.RoleResourceAccess", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("resource_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<Guid>("ResourceAccessId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("resource_access_id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.HasKey("ResourceId", "RoleId", "ResourceAccessId");

                    b.HasIndex("ResourceAccessId");

                    b.HasIndex("RoleId");

                    b.ToTable("access_role_resource_access");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<DateTime?>("CreatedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_stamp");

                    b.Property<Guid>("CurrentUserPasswordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_password_id");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("external_id");

                    b.Property<DateTime?>("FirstLoginStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_login_stamp");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first");

                    b.Property<DateTime?>("LastLoginStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_login_stamp");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last");

                    b.Property<DateTime?>("LastUpdatedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated_stamp");

                    b.Property<bool>("NeedsPasswordChange")
                        .HasColumnType("bit")
                        .HasColumnName("needs_password_change");

                    b.Property<Guid?>("PasswordResetToken")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("password_reset_token");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("RequestedPasswordReset")
                        .HasColumnType("datetime2")
                        .HasColumnName("requested_password_reset");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.Property<short>("enabled")
                        .HasColumnType("smallint")
                        .HasColumnName("enabled");

                    b.HasKey("Id");

                    b.ToTable("access_users");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.UserPassword", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<DateTime?>("CreatedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_stamp");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("access_user_passwords");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("ArchivedStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("archived_stamp");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("access_user_roles");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.ResourceAccess", b =>
                {
                    b.HasOne("DORA.DotAPI.Context.Entities.Resource", "Resource")
                        .WithMany("ResourceAccesses")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.RoleResourceAccess", b =>
                {
                    b.HasOne("DORA.DotAPI.Context.Entities.ResourceAccess", "ResourceAccess")
                        .WithMany("RoleResourceAccesses")
                        .HasForeignKey("ResourceAccessId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DORA.DotAPI.Context.Entities.Resource", "Resource")
                        .WithMany("RoleResourceAccesses")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DORA.DotAPI.Context.Entities.Role", "Role")
                        .WithMany("RoleResourcesAccess")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("ResourceAccess");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.UserPassword", b =>
                {
                    b.HasOne("DORA.DotAPI.Context.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.UserRole", b =>
                {
                    b.HasOne("DORA.DotAPI.Context.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DORA.DotAPI.Context.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.Resource", b =>
                {
                    b.Navigation("ResourceAccesses");

                    b.Navigation("RoleResourceAccesses");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.ResourceAccess", b =>
                {
                    b.Navigation("RoleResourceAccesses");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.Role", b =>
                {
                    b.Navigation("RoleResourcesAccess");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DORA.DotAPI.Context.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
